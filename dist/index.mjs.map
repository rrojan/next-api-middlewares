{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\"\n\nexport type Next = (pipeParams?: any) => Promise<NextResponse | void>\n\nexport function pipe(...pipeFunctions: any) {\n  return async (req: NextRequest, params: any) => {\n    return await startPipe(req, params, pipeFunctions, 0)\n  }\n}\n\nasync function startPipe(\n  req: NextRequest,\n  params: any,\n  pipeFunctions: any,\n  currentPipeFunctionIndex: number\n) {\n  const next: Next = async (pipeParams: any) => {\n    const nextPipeFunction = pipeFunctions[currentPipeFunctionIndex + 1]\n    if (!nextPipeFunction) return\n\n    // Recursively run next layer\n    return await startPipe(\n      req,\n      { ...params, pipeParams },\n      pipeFunctions,\n      currentPipeFunctionIndex + 1\n    )\n  }\n\n  // Initializes chain - the next function will\n  // recursively run next pipeFunction when called by the current fn\n  return await pipeFunctions[currentPipeFunctionIndex](req, params, next)\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIO,SAAS,QAAQ,eAAoB;AAC1C,SAAO,CAAO,KAAkB,WAAgB;AAC9C,WAAO,MAAM,UAAU,KAAK,QAAQ,eAAe,CAAC;AAAA,EACtD;AACF;AAEA,SAAe,UACb,KACA,QACA,eACA,0BACA;AAAA;AACA,UAAM,OAAa,CAAO,eAAoB;AAC5C,YAAM,mBAAmB,cAAc,2BAA2B,CAAC;AACnE,UAAI,CAAC;AAAkB;AAGvB,aAAO,MAAM;AAAA,QACX;AAAA,QACA,iCAAK,SAAL,EAAa,WAAW;AAAA,QACxB;AAAA,QACA,2BAA2B;AAAA,MAC7B;AAAA,IACF;AAIA,WAAO,MAAM,cAAc,wBAAwB,EAAE,KAAK,QAAQ,IAAI;AAAA,EACxE;AAAA;","names":[]}